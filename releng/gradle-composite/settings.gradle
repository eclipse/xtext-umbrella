apply from: 'projectFinder.gradle'

if (!hasProperty('generatePrefs')) {
    def projects = getProjectsFromLocationProperties()
    if (!projects.isEmpty()) {
        projects.each {
            file ->
            logger.quiet("includeBuild ${file}")
            includeBuild(file) {
            	name = findProjectName(file)
            }
        }
    } else {
        // default behaviour if no locations.properties was generated by oomph
        (files { file('../../../').listFiles() })
        .filter { 
            File it ->
            it.isDirectory() && XTEXT_GRADLE_PROJECTS.split(',').any{p->it.name.contains(p)} && new File(it, "settings.gradle").exists()
        }.collect{ it.path }
        .toUnique { a, b ->
            findProjectName(a) <=> findProjectName(b)
        }.each { it -> includeBuild it }
    }     
}

def findProjectName(rootPath) {
    try {
        Properties props =  new Properties()
        props.load(new FileInputStream(new File(rootPath, "settings.gradle")))
        return props.getProperty('rootProject.name')
    } catch(Exception e) {
        return rootPath
    }
}
